services:
  recommender:
    build:
      context: .
      dockerfile: TCPServer/Dockerfile
    container_name: recommendation_server
    volumes:
      - recommendation_database:/usr/src/data
    networks:
      - app_network
    environment:
      PORT: ${RECOMMENDATION_PORT:-5555} 
    entrypoint: ["./netflix_server"]
    command: ["${RECOMMENDATION_PORT:-5555}"]

  app:
    build:
      context: .
      dockerfile: WebServer/Dockerfile
    container_name: app_server
    ports:
      - "${APP_PORT:-3000}:${CONTAINER_PORT:-3000}"
    networks:
      - app_network
    volumes:
      - temp_uploads:/usr/src/app/uploads/temp           # Temporary file uploads
      - user_images:/usr/src/app/uploads/usersImages    # User profile pictures
      - movie_files:/usr/src/app/uploads/movies         # Uploaded movie files
      - movie_main_images:/usr/src/app/uploads/movieImages  # Main movie images
    environment:
      CONNECTION_STRING: ${CONNECTION_STRING}
      RECOMMENDATION_IP: recommendation_server  
      RECOMMENDATION_PORT: ${RECOMMENDATION_PORT:-5555}
      PORT: ${CONTAINER_PORT:-3000} 
      JWT_SECRET: ${JWT_SECRET}
    command: ["npm", "start"]

volumes:
  recommendation_database:  # Persistent database for recommendation server
  temp_uploads:             # Volume for temporary file uploads
  user_images:              # Volume for user profile pictures
  movie_files:              # Volume for uploaded movie files
  movie_main_images:        # Volume for main movie images
networks:
  app_network:
    driver: bridge
